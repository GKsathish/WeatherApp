{"ast":null,"code":"// // src/App.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Weather from './Components/Weather';\n// import SearchBar from './Components/SearchBar';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './index.css';\n\n// const App = () => {\n//   const [weather, setWeather] = useState(null);\n//   const [darkMode, setDarkMode] = useState(false);\n//   const fetchWeather = async (query) => {\n//     try {\n//       // Get latitude and longitude for the city\n//       const locationResponse = await axios.get(`https://geocoding-api.open-meteo.com/v1/search`, {\n//         params: {\n//           name: query,\n//         },\n//       });\n//       if (locationResponse.data.results && locationResponse.data.results.length > 0) {\n//         const { latitude, longitude, name } = locationResponse.data.results[0];\n\n//         // Fetch weather data\n//         const weatherResponse = await axios.get(`https://api.open-meteo.com/v1/forecast`, {\n//           params: {\n//             latitude,\n//             longitude,\n//             current_weather: true,\n//           },\n//         });\n\n//         setWeather({ ...weatherResponse.data, city: name });\n//       } else {\n//         alert(\"City not found\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching weather data:\", error);\n//       alert(\"Unable to fetch weather data. Please try again.\");\n//     }\n//   };\n//   // const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n\n//   // const fetchWeather = async (query) => {\n//   //   try {\n//   //     const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n//   //       params: {\n//   //         q: query,\n//   //         appid: apiKey,\n//   //       },\n//   //     });\n//   //     setWeather(response.data);\n//   //   } catch (error) {\n//   //     console.error(\"Error fetching weather data:\", error);\n//   //     alert(\"Invalid location or unable to fetch data.\");\n//   //   }\n//   // };\n\n//   const toggleDarkMode = () => setDarkMode(!darkMode);\n\n//   useEffect(() => {\n//     // Optionally, fetch the weather for a default city on load\n//     fetchWeather();\n//   }, []);\n\n//   return (\n//     <div className='container '>\n// <div className='row'>\n//   <div className='col-12 shadow   my-5'>\n//   <div className={`app ${darkMode ? 'dark-mode' : ''}  d-flex justify-content-center align-items-center`}>\n//       <div className=\"container p-5 mx-5\">\n//      <div className='d-flex justify-content-between'>\n//      <h1 className='my-2'><span><i className=\"bi bi-cloud-sun\"></i></span>Weather App</h1>\n//         <span onClick={toggleDarkMode} className=\"btn btn-secondary my-3\">\n//           {darkMode ? 'Light Mode' : 'Dark Mode'}\n//         </span>\n//      </div>\n//      <div>\n//      <SearchBar onSearch={fetchWeather} />\n//         <Weather weather={weather} />\n//      </div>\n\n//       </div>\n//     </div>\n//   </div>\n// </div>\n//     </div>\n\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["/home/sathish/Desktop/Assignment/weatherapp/weather-app/src/App.js"],"sourcesContent":["// // src/App.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Weather from './Components/Weather';\n// import SearchBar from './Components/SearchBar';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './index.css';\n\n// const App = () => {\n//   const [weather, setWeather] = useState(null);\n//   const [darkMode, setDarkMode] = useState(false);\n//   const fetchWeather = async (query) => {\n//     try {\n//       // Get latitude and longitude for the city\n//       const locationResponse = await axios.get(`https://geocoding-api.open-meteo.com/v1/search`, {\n//         params: {\n//           name: query,\n//         },\n//       });\n//       if (locationResponse.data.results && locationResponse.data.results.length > 0) {\n//         const { latitude, longitude, name } = locationResponse.data.results[0];\n        \n//         // Fetch weather data\n//         const weatherResponse = await axios.get(`https://api.open-meteo.com/v1/forecast`, {\n//           params: {\n//             latitude,\n//             longitude,\n//             current_weather: true,\n//           },\n//         });\n        \n//         setWeather({ ...weatherResponse.data, city: name });\n//       } else {\n//         alert(\"City not found\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching weather data:\", error);\n//       alert(\"Unable to fetch weather data. Please try again.\");\n//     }\n//   };\n//   // const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n\n//   // const fetchWeather = async (query) => {\n//   //   try {\n//   //     const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather`, {\n//   //       params: {\n//   //         q: query,\n//   //         appid: apiKey,\n//   //       },\n//   //     });\n//   //     setWeather(response.data);\n//   //   } catch (error) {\n//   //     console.error(\"Error fetching weather data:\", error);\n//   //     alert(\"Invalid location or unable to fetch data.\");\n//   //   }\n//   // };\n\n//   const toggleDarkMode = () => setDarkMode(!darkMode);\n\n//   useEffect(() => {\n//     // Optionally, fetch the weather for a default city on load\n//     fetchWeather();\n//   }, []);\n\n//   return (\n//     <div className='container '>\n// <div className='row'>\n//   <div className='col-12 shadow   my-5'>\n//   <div className={`app ${darkMode ? 'dark-mode' : ''}  d-flex justify-content-center align-items-center`}>\n//       <div className=\"container p-5 mx-5\">\n//      <div className='d-flex justify-content-between'>\n//      <h1 className='my-2'><span><i className=\"bi bi-cloud-sun\"></i></span>Weather App</h1>\n//         <span onClick={toggleDarkMode} className=\"btn btn-secondary my-3\">\n//           {darkMode ? 'Light Mode' : 'Dark Mode'}\n//         </span>\n//      </div>\n//      <div>\n//      <SearchBar onSearch={fetchWeather} />\n//         <Weather weather={weather} />\n//      </div>\n\n//       </div>\n//     </div>\n//   </div>\n// </div>\n//     </div>\n   \n//   );\n// };\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}